I"_<h2 id="project-summary">Project Summary</h2>
<p>This project is about data analysis on Cars dataset. The goal of the project was to combine cars data from 3 different sources, combine them using common key and perform analysis on that.</p>

<p>Data sources:</p>
<ol>
  <li>Flat file (CSV) source - Kaggle.com</li>
  <li>Website data source - <a href="https://en.wikipedia.org/wiki/List_of_best-selling_automobiles">Data source</a></li>
  <li>API data source - <a href="https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/car?format=json">Data source</a></li>
</ol>

<p>The data from three sources are stored in CSV file. They are merged by Make and Model and are loaded in sqlite database. Data visualization is be performed on the combined data.</p>

<p>Histogram of Car Make</p>

<p><img src="/img/posts/Cars/output_27_1.png" alt="png" /></p>

<p>Bar chart by Car Style</p>

<p><img src="/img/posts/Cars/output_28_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Bar plot
# Mean price of Cars by Make
</span><span class="n">db_df</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">"Make"</span><span class="p">)[</span><span class="s">'Price_USD'</span><span class="p">].</span><span class="n">mean</span><span class="p">().</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'bar'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2186135d948&gt;
</code></pre></div></div>

<p><img src="output_29_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Scatter plot of car Price_USD vs Make
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">db_df</span><span class="p">.</span><span class="n">plot</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Price_USD'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Make'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;Figure size 720x360 with 0 Axes&gt;
</code></pre></div></div>

<p><img src="output_30_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">col</span> <span class="o">=</span> <span class="s">"Size"</span>
<span class="n">grouped</span> <span class="o">=</span> <span class="n">db_df</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="n">value_counts</span><span class="p">().</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">grouped</span> <span class="o">=</span> <span class="n">grouped</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span> <span class="o">=</span> <span class="p">{</span><span class="n">col</span> <span class="p">:</span> <span class="s">"count"</span><span class="p">,</span> <span class="s">"index"</span> <span class="p">:</span> <span class="n">col</span><span class="p">})</span>

<span class="c1"># plot
</span><span class="n">labels</span> <span class="o">=</span> <span class="n">grouped</span><span class="p">[</span><span class="n">col</span><span class="p">]</span>
<span class="n">sizes</span> <span class="o">=</span> <span class="n">grouped</span><span class="p">[</span><span class="s">'count'</span><span class="p">]</span>

<span class="n">fig1</span><span class="p">,</span> <span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>
<span class="n">ax1</span><span class="p">.</span><span class="n">pie</span><span class="p">(</span><span class="n">sizes</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">,</span> <span class="n">autopct</span><span class="o">=</span><span class="s">'%1.1f%%'</span><span class="p">,</span> <span class="n">startangle</span><span class="o">=</span><span class="mi">90</span><span class="p">)</span>
<span class="c1"># Equal aspect ratio ensures that pie is drawn as a circle
</span><span class="n">ax1</span><span class="p">.</span><span class="n">axis</span><span class="p">(</span><span class="s">'equal'</span><span class="p">)</span>  

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_31_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Density plot of Odometer
</span><span class="n">db_df</span><span class="p">[</span><span class="s">'Odometer'</span><span class="p">].</span><span class="n">plot</span><span class="p">.</span><span class="n">kde</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x21861532248&gt;
</code></pre></div></div>

<p><img src="output_32_1.png" alt="png" /></p>

:ET